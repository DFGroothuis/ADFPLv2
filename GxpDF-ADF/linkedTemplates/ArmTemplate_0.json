{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "GxpDF-ADF"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"SAP_ODP_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SAP_ODP'"
		},
		"SapTable1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SapTable1'"
		},
		"SapTableLocal_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SapTableLocal'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureDataLakeStorageLocal_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorageLocal'"
		},
		"SAP_ODP_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "200"
		},
		"SAP_ODP_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "NL35167"
		},
		"SAP_ODP_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "bfeslsd.solco.global.nttdata.com"
		},
		"SAP_ODP_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		},
		"SapTable1_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "200"
		},
		"SapTable1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "NL22511"
		},
		"SapTable1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "10.134.4.62"
		},
		"SapTable1_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		},
		"SapTableLocal_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "200"
		},
		"SapTableLocal_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "NL35167"
		},
		"SapTableLocal_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "bfeslsd.solco.global.nttdata.com"
		},
		"SapTableLocal_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		},
		"AzureDataLakeStorage526_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/b4e51074-d735-40c8-ae01-f374217d2c40/resourceGroups/Storage-rg/providers/Microsoft.Storage/storageAccounts/gxpdfdatalake"
		},
		"AzureDataLakeStorage526_properties_groupId": {
			"type": "string",
			"defaultValue": "dfs"
		},
		"AzureDataLakeStorage526_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"gxpdfdatalake.dfs.core.windows.net"
			]
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://gxpdfdatalake.dfs.core.windows.net/"
		},
		"AzureDataLakeStorageLocal_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://gxpdfdatalake.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IRLocal')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ir-ih73vfvvtagr4')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "Self-hosted Integration runtime created using ARM template",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobDelimitedDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"HighWatermarkBlobDirectory": {
						"type": "string"
					},
					"HighWatermarkBlobName": {
						"type": "string"
					},
					"HighWatermarkBlobContainer": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().HighWatermarkBlobName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().HighWatermarkBlobDirectory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().HighWatermarkBlobContainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedTextSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DelimitedText sink",
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DelimitedTextSinkContainer": {
						"type": "string"
					},
					"DelimitedTextSinkDirectory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().DelimitedTextSinkDirectory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().DelimitedTextSinkContainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"nullValue": "\\N",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_parquet_002')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"EnvStorage": {
						"type": "String"
					},
					"Zone": {
						"type": "string"
					},
					"DataSource": {
						"type": "string"
					},
					"EnvRegSys": {
						"type": "string"
					},
					"Domain": {
						"type": "string"
					},
					"Object": {
						"type": "string"
					},
					"CDS": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(dataset().CDS,'_',utcnow(), '.parquet')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(dataset().Zone,'/',dataset().DataSource,'/',dataset().EnvRegSys,'/',dataset().Domain,'/',dataset().Object,'/',dataset().CDS)",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().EnvStorage",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAP_ODP')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"test_subscriber": {
						"type": "string"
					},
					"test_param": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SapOdp",
				"typeProperties": {
					"clientId": "[parameters('SAP_ODP_properties_typeProperties_clientId')]",
					"language": "EN",
					"sncMode": false,
					"userName": "[parameters('SAP_ODP_properties_typeProperties_userName')]",
					"subscriberName": "IPRODUCT",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SAP_ODP_password')]"
					},
					"server": "[parameters('SAP_ODP_properties_typeProperties_server')]",
					"systemNumber": "[parameters('SAP_ODP_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "IRLocal",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IRLocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SapTable1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('SapTable1_properties_typeProperties_clientId')]",
					"language": "EN",
					"sncMode": false,
					"userName": "[parameters('SapTable1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SapTable1_password')]"
					},
					"server": "[parameters('SapTable1_properties_typeProperties_server')]",
					"systemNumber": "[parameters('SapTable1_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "ir-ih73vfvvtagr4",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/ir-ih73vfvvtagr4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SapTableLocal')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('SapTableLocal_properties_typeProperties_clientId')]",
					"language": "EN",
					"sncMode": false,
					"userName": "[parameters('SapTableLocal_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SapTableLocal_password')]"
					},
					"server": "[parameters('SapTableLocal_properties_typeProperties_server')]",
					"systemNumber": "[parameters('SapTableLocal_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "IRLocal",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IRLocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "West Europe",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60,
							"numberOfPipelineNodes": 1,
							"numberOfExternalNodes": 1
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureDataLakeStorage526')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureDataLakeStorage526_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureDataLakeStorage526_properties_groupId')]",
				"fqdns": "[parameters('AzureDataLakeStorage526_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAPTableSource_Incremental')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SapTableLocal",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SapTableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().SapTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SapTableLocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sap_odp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAP_ODP",
					"type": "LinkedServiceReference",
					"parameters": {
						"test_subscriber": "IPRODUCT",
						"test_param": "0"
					}
				},
				"annotations": [],
				"type": "SapOdpResource",
				"schema": [],
				"typeProperties": {
					"context": "ABAP_CDS",
					"objectName": "IPRODUCT$P"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SAP_ODP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sap_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SapTableLocal",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SapTableLocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorageLocal')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorageLocal_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorageLocal_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IncrementalCopyFromSAPTable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyFromSAPTable",
						"description": "Copy incremental data from SAP table to AzureBlobStorage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupLastCopiedDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": {
									"value": "@{concat(pipeline().parameters.SapTableDateColumn,' LE ',formatDateTime(adddays(pipeline().TriggerTime,-1),'yyyyMMdd'), ' AND ',pipeline().parameters.SapTableDateColumn,' GE ', formatDateTime(activity('LookupLastCopiedDate').output.firstRow.Prop_0, 'yyyyMMdd'))}",
									"type": "Expression"
								},
								"customRfcReadTableFunctionModule": "",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SAPTableSource_Incremental",
								"type": "DatasetReference",
								"parameters": {
									"SapTableName": {
										"value": "@pipeline().parameters.SapTableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedTextSink",
								"type": "DatasetReference",
								"parameters": {
									"DelimitedTextSinkContainer": {
										"value": "@pipeline().parameters.DelimitedTextSinkContainer",
										"type": "Expression"
									},
									"DelimitedTextSinkDirectory": {
										"value": "@pipeline().parameters.DelimitedTextSinkDirectory",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "LookupLastCopiedDate",
						"description": "Copy incremental data from SAP table to AzureBlobStorage",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "AzureBlobDelimitedDataset",
								"type": "DatasetReference",
								"parameters": {
									"HighWatermarkBlobDirectory": {
										"value": "@pipeline().parameters.HighWatermarkBlobDirectory",
										"type": "Expression"
									},
									"HighWatermarkBlobName": {
										"value": "@pipeline().parameters.HighWatermarkBlobName",
										"type": "Expression"
									},
									"HighWatermarkBlobContainer": {
										"value": "@pipeline().parameters.HighWatermarkBlobContainer",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "SetLastCopiedDate",
						"description": "Store the last copied date into blob by calling Logic App",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CopyFromSAPTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.LogicAppURL",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\"copiedDate\":\"@{pipeline().TriggerTime}\"",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"HighWatermarkBlobDirectory": {
						"type": "string"
					},
					"HighWatermarkBlobName": {
						"type": "string"
					},
					"HighWatermarkBlobContainer": {
						"type": "string"
					},
					"SapTableName": {
						"type": "string"
					},
					"DelimitedTextSinkContainer": {
						"type": "string"
					},
					"DelimitedTextSinkDirectory": {
						"type": "string"
					},
					"LogicAppURL": {
						"type": "string"
					},
					"SapTableDateColumn": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SAPTableSource_Incremental')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedTextSink')]",
				"[concat(variables('factoryId'), '/datasets/AzureBlobDelimitedDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_parquet_001')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"EnvStorage": {
						"type": "String"
					},
					"Zone": {
						"type": "string"
					},
					"DataSource": {
						"type": "string"
					},
					"EnvRegSys": {
						"type": "string"
					},
					"Domain": {
						"type": "string"
					},
					"Object": {
						"type": "string"
					},
					"Table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().table,'_',utcnow(), '.parquet')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(dataset().Zone,'/',dataset().DataSource,'/',dataset().EnvRegSys,'/',dataset().Domain,'/',dataset().Object,'/',dataset().Table)",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().EnvStorage",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_sap_cdc')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_sap_odp",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_adls_parquet_002",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "AzureDataLakeStorageLocal",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [],
					"scriptLines": [
						"parameters{",
						"     KeyFields as string[]",
						"}",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     staged: true,",
						"     readMode: 'fullAndIncrementalLoad',",
						"     keys: ($KeyFields),",
						"     format: 'sapObject',",
						"     fixDecimalPrecision: true) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     truncate: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sap_odp')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_parquet_002')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLocal')]"
			]
		}
	]
}